#!/bin/bash

# Control virtual image
# @author Anders Olsson


VNODECTRL_VERSION="10.12-alpha1"
VNODECTRL_BASENAME=`basename $0`

VNODECTRL_ROOT="/opt/vnodectrl.d"
VNODECTRL_LOCAL="$HOME/.vnodectrl.d"

VNODECTRL_BIN="$VNODECTRL_ROOT/bin"
VNODECTRL_LIB="$VNODECTRL_ROOT/lib"

VNODECTRL_CONFIG="$VNODECTRL_LOCAL/config"
VNODECTRL_IDENTIFIERS="$VNODECTRL_LOCAL/identifier"


. $VNODECTRL_LIB/core
. $VNODECTRL_LIB/getopts_long


core_help() {
    if [ -n "$error_msg" ]; then
    	echo $error_msg
    fi

cat << EOF
usage: $VNODECTRL_BASENAME [options] command


Options:
  -h	  		          Show this message


Commands:
$(_print_plugins_info)

EOF

    return 0
}

core_completion() {
    echo ${VNODECTRL_PLUGINS[@]}
}


_print_plugins_info() {
    local info
    
    for p in ${VNODECTRL_PLUGINS[@]}; do
        info=''
        if type -t "${p}_info" > /dev/null; then
            info=$("${p}_info")
        fi
        
        printf "  %-32s%s\n" $p "$info"
    done
}


for p in $(find $VNODECTRL_BIN -type f -perm -100 -exec basename {} \;); do
    path=$VNODECTRL_BIN/$p
    api_version=$(grep -ioE '^[ \t]*#[ \t]*api_version=[0-9]+[ \t]*$' $path | sed -E 's/.*([0-9]+).*/\1/')
    
    if [ ${api_version:-0} -eq 1 ]; then
        . $path
        
        VNODECTRL_PLUGINS[${#VNODECTRL_PLUGINS[@]}]=$p
    fi
done

error_msg=''
call_usage=false

vnode_identity_unload

if [ $# -eq 0 ]; then
	set -- "-h"
fi

while getopts_long "hi:" opt \
	help no_argument \
	completion required_argument \
	"" "$@"
do
	case "$opt" in
	    i)
	        vnode_identity_load ${OPTLARG}
	    ;;
	    completion)
	        if type -t "${OPTLARG}_completion" > /dev/null; then
	            "${OPTLARG}_completion"
	            exit 0
	        fi
	        exit 1
	    ;;
		h|help)
			call_usage=true
		;;
		:)
			error_msg=$OPTLERR
			call_usage=true
			break
		;;
	esac
done

if $call_usage; then
	core_help
	exit 1
fi

shift "$(($OPTLIND - 1))"

plugin=$1

if ! type -t "${plugin}_exec" > /dev/null; then
    core_help
    exit 1
fi

shift

"${plugin}_exec" "$@"

exit $?
