#!/bin/bash

# api_version=1


srv_info() {
    echo "Sync files between host and guest"
}

srv_help() {
    echo "Usage: `basename $0` {host|guest|unison}"
}

srv_exec() {
    local \
        guest_user=$(vnode_identity_get 'guest_user') \
        guest_addr=$(vnode_identity_get 'guest_addr') \
        srv_folder=$(vnode_identity_get 'srv_folder')
    
    
    mount | egrep "^$(echo $guest_addr | sed 's/\./\\\./g'):/srv on.*$" > /dev/null
    
    if [ $? -eq 0 ]; then
        echo "Can't sync srv folder while mount is up."
        echo "Please unmount with 'vnodectrl umount' and try again."
        return 1
    fi
    
    
    case $1 in
    	host)
    		return srv_sync_host
    	;;
    	guest)
            return srv_sync_guest
    	;;
    	unison)
            return srv_sync_unison
    	;;
    	*)
    		srv_help
    	;;
    esac
    
    return 0
}

srv_sync_host() {
    echo         "This might delete files from host:/srv folder."
    read -n 1 -p "Do you still want to continue? (y/N): " choice && choice=${choice:-N}
    echo         ""

    if [ $choice = 'n' ] || [ $choice = 'N' ]; then
    	return 1
    fi

    rsync -azrPq --delete $guest_user@$guest_addr:/srv/ $srv_folder
    
    return $?
}

srv_sync_guest() {
    echo         "This might delete files from guest:/srv folder."
    read -n 1 -p "Do you still want to continue? (y/N): " choice && choice=${choice:-N}
    echo         ""

    if [ $choice = 'n' ] || [ $choice = 'N' ]; then
    	return 1
    fi

    rsync -azrPq --delete $srv_folder/ $guest_user@$guest_addr:/srv

    return 0
}

srv_sync_unison() {
    rsync -azrPq --delete $srv_folder/ $guest_user@$guest_addr:/bak

    if [ ! $? -eq 0 ]; then
    	return 1
    fi

    ssh -q -oStrictHostKeyChecking=no $guest_user@$guest_addr "unison -auto /bak /srv"

    if [ ! $? -eq 0 ]; then
    	return 1
    fi

    rsync -azrPq --delete $guest_user@$guest_addr:/bak/ $srv_folder

    return 0
}
