#!/bin/bash


# Main functions for plugin srv.
#
# api_version=1
# dependencies=mount


# Implementation of hook_info
#
# @author Anders Olsson
prepare_info() {
    echo "Control MySQL on guest system"
}

# Implementation of hook_info
#
# @author Anders Olsson
prepare_help() {
    echo "You can start cli, dump and restore"
}

# Implementation of hook_exec
#
# @author Anders Olsson
prepare_exec() {
    local \
        guest_user=$(vnode_identity_get 'guest_user') \
        guest_pass=$(vnode_identity_get 'guest_pass') \
        guest_addr=$(vnode_identity_get 'guest_addr') \
        force=false


    while getopts_long "f" opt \
    	force no_argument "" "$@"
    do
    	case "$opt" in
    		f|force)
    			force=true
    		;;
    	esac
    done

    shift "$(($OPTLIND - 1))"

    # Remove guest from known_hosts.
    ssh-keygen -R $guest_addr > /dev/null 2>&1
    
    #Copy host ssh key to guest.
    ssh -q -oStrictHostKeyChecking=no $guest_user@$guest_addr "mkdir ~/.ssh > /dev/null 2>&1; echo "`cat ~/.ssh/id_dsa.pub`" >> ~/.ssh/authorized_keys"
    
    if [ ! $? -eq 0 ]; then
    	echo "Faild to authorize host ($guest_user@$guest_addr)"
    	return 1
    fi
    
    # Check if guest has been prepared.
    ssh -q -oStrictHostKeyChecking=no $guest_user@$guest_addr "test -f ~/.vnodectrl.d/ssh/id_dsa.pub"
    
    local R=$?
    
    if [ ! $R -eq 0 ] || [ $force ]; then
        if [ ! $R -eq 0 ]; then
    	    echo "This guest isn't prepared."
    	else
    	    echo "This guest has been prepared before."
    	fi
    	
    	read -n 1 -p "Do you want to prepare it? (Y/n): " choice && choice=${choice:-Y}
    	echo ''
    	
    	if [ $choice = 'y' ] || [ $choice = 'Y' ]; then
    		scp -r $VNODECTRL_ROOT/res/guest $guest_user@$guest_addr:~/ > /dev/null 2>&1
    		
    		if [ ! $? -eq 0 ]; then
    			echo "Faild to prepare guest. (SCP)"
    			
    			return 1
    		fi
    		
    		ssh -q -oStrictHostKeyChecking=no $guest_user@$guest_addr "~/guest/prepare.sh '$guest_pass'"
    		
    		if [ ! $? == '0' ]; then
    			echo "Faild to prepare guest. (SSH)"
    			
    			return 1
    		fi
    	else
    		return 1
    	fi
    fi


    # Get ssh key from guest
    local GUEST_SSH_KEY=$(ssh -q -oStrictHostKeyChecking=no $guest_user@$guest_addr "cat ~/.vnodectrl.d/ssh/id_dsa.pub")
    
    echo $GUEST_SSH_KEY | tee -a ~/.ssh/authorized_keys > /dev/null
    
    uniq ~/.ssh/authorized_keys ~/.ssh/authorized_keys.old && \
    mv ~/.ssh/authorized_keys.old ~/.ssh/authorized_keys

    return 0
}
