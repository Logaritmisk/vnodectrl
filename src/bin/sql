#!/bin/bash


# Main functions for plugin srv.
#
# api_version=1
# dependencies=mount


# Implementation of hook_info
#
# @author Anders Olsson
sql_info() {
    echo "Control MySQL on guest system"
}

# Implementation of hook_info
#
# @author Anders Olsson
sql_help() {
    echo "You can start cli, dump and restore"
}

# Implementation of hook_exec
#
# @author Anders Olsson
sql_exec() {
    case $1 in
    	cli)
    		sql_guest_cli
    	;;
    	dump)
    		sql_guest_dump
    	;;
    	restore)
    		sql_guest_restore
    	;;
    	*)
    		sql_help
    		return 1
    	;;
    esac


    return $?
}



# API for srv


# Start MySQL cli on guest.
#
# @author Anders Olsson
sql_guest_cli() {
    local \
        guest_user=$(vnode_identity_get 'guest_user') \
        guest_addr=$(vnode_identity_get 'guest_addr')


    ssh -qt -oStrictHostKeyChecking=no $guest_user@$guest_addr "mysql -uroot"


    return $?
}

# Dump database on guest.
#
# @author Anders Olsson
sql_guest_dump() {
    local \
        guest_user=$(vnode_identity_get 'guest_user') \
        guest_pass=$(vnode_identity_get 'guest_pass') \
        guest_addr=$(vnode_identity_get 'guest_addr')


    ssh -qt -oStrictHostKeyChecking=no $guest_user@$guest_addr "sudo -k; echo $guest_pass | sudo -S ~/guest/sql-dump.sh" | tail -n +1

    R=$?
    if [ ! $R -eq 0 ]; then
        echo "Error: $R"
    fi


    return $R
}

# Restore database on guest.
#
# @author Anders Olsson
sql_guest_restore() {
    local \
        guest_user=$(vnode_identity_get 'guest_user') \
        guest_pass=$(vnode_identity_get 'guest_pass') \
        guest_addr=$(vnode_identity_get 'guest_addr')


    ssh -qt -oStrictHostKeyChecking=no $guest_user@$guest_addr "sudo -k; echo $guest_pass | sudo -S ~/guest/sql-restore.sh" | tail -n +1

    R=$?
    if [ ! $R -eq 0 ]; then
        echo "Error: $R"
    fi


    return $R
}
